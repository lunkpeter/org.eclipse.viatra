/*******************************************************************************
 * Copyright (c) 2004-2015, Peter Lunk, Zoltan Ujhelyi and Daniel Varro
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Peter Lunk - initial API and implementation
 *******************************************************************************/
module org.eclipse.viatra.emf.mwe2integration.example.SimpleSequenceExample

//Import the necessary libraries
//Note, that the package containing the workflow needs to be imported as well (if it contains used resources)
import org.eclipse.viatra.emf.mwe2integration.*
import org.eclipse.viatra.emf.mwe2integration.mwe2impl.*
import org.eclipse.viatra.emf.mwe2integration.mwe2impl.messages.*
import org.eclipse.viatra.emf.mwe2integration.examples.resources.*

//The workflow and components are defined in the usual MWE2 fashion
Workflow {
	//Add a TransformationChain component
	//This component represents an MWE2 component that can contain numerous transformations
	component = TransformationChain {
		//Sequences can contain any number of other transformation steps
		step = Sequence{
			//Add transformation steps
			//These classes all extend the TransformationStep abstract class, which implements their core features.
			//User defined functionality can be added via overriding the doExecute() method 
			step = ExampleATransformationStep{}
			//Multiple transformation steps will be executed in order of their definition
			//Note that in the other examples, more elaborate control constructions will be presented.
			step = ExampleBTransformationStep{}
		}
	}
	//You can add additional regular MWE2 components here
}